 EMERALD'S KILLFEED ‚Äî LOG PARSER EMBED, SYNC & ID RESOLUTION TASK

üß© TASK TYPE: SINGLE-TASK / NO PHASE 0

This task is an atomic end-to-end repair operation.
You must complete all instructions in one continuous batch.
No commits, checkpoints, or output may occur until the full task is verified in production.


---

üìç OBJECTIVES

1. BLOCK VEHICLE OUTPUTS

Suppress all log parser embeds related to:

Vehicle spawn

Vehicle deletion


These events may be parsed but must not be posted.


2. UNIFY EMBED SYSTEM & APPLY THEMING

Every embed from the log parser (missions, connections, traders, etc.) must:

Use EmbedFactory.build()

Follow the Emerald visual spec:

Professional, esports-adjacent dark-themed formatting

Right-aligned thumbnail from the correct image asset (auto-selected)

Clear field and value separation ‚Äî no emojis or reaction-based decoration

Footer must always be:
Powered by Discord.gg/EmeraldServers

Randomized message variants must remain on-theme (mature, Deadside-relevant, no childish tone)




3. NAME NORMALIZATION

Implement a robust name normalization system for all parser output types:

Mission codes ‚Üí readable names (e.g., DSMission_LV3_TYPE2 ‚Üí ‚ÄúMilitary Raid (Lv. 3)`)

Trader event tags ‚Üí readable output

Heli crashes, airdrops, etc. ‚Üí consistent, clean naming


Use static mappings, keyword regex, or both ‚Äî fallback to ‚ÄúUnknown‚Äù only as a last resort


4. PLAYER NAME RESOLUTION FROM CONNECTION LOGS

Connection-based player events must resolve real player names where possible:

Use the player‚Äôs id from the log line

Cross-check against:

The players collection in the database

Historical entries in previous log lines (within same session) that contain player names and IDs



This system must reduce unknown player name output in connections/join/disconnects

Unknowns should only be used if ID lookup fails in both DB and session context


5. ADVANCED COMMAND SYNC LOGIC

Rebuild the command sync routine to:

First try global sync (await bot.tree.sync())

If global sync fails or triggers rate limit:

Fallback to per-guild sync (await bot.tree.sync(guild=GUILD_OBJ))


Log which method succeeded


Ensure:

All commands appear in Discord

No rate limit errors occur on startup or restart



6. PYCORD 2.6.1 VALIDATION

Triple check that the entire codebase uses only Pycord 2.6.1 features:

All decorators are Pycord-native (@discord.slash_command)

All imports reference py-cord, not discord.py

Awaitables and interaction handling are up-to-date and compatible




---

‚úÖ COMPLETION CRITERIA

[ ] Vehicle logs are ignored (no output)

[ ] All log parser embeds use EmbedFactory and follow theme

[ ] No emojis used in any embed field or formatting

[ ] All mission/event outputs use normalized names

[ ] Player names are reliably resolved from logs and database using player_id

[ ] Slash commands are fully synced without triggering global rate limits

[ ] All Pycord usage is correct, clean, and consistent



---

üîê EXECUTION RULES

‚úÖ This is ONE SINGLE TASK
‚úÖ Do not checkpoint, commit, or output until all criteria pass in production
‚úÖ Use only Pycord 2.6.1
‚úÖ No assumptions ‚Äî everything must be tested, verified, and logged
üö´ No emojis
üö´ No placeholders or temporary logging
